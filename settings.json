// STRAUTOMATOR CORE SETTINGS
// Here are most of the Strautomator settings, and these should be considered
// production ready (not including secrets and credentials).

{
    "ai": {
        // Cache generated AI content for 1 minute.
        "cacheDuration": 60,
        // List of humours (adjectives) to be used on the AI generated content.
        "humours": ["absurd", "ancient", "boring", "clever", "comical", "dry", "exquisite", "funny", "goofy", "hilarious", "ironic", "playful", "sarcastic", "satirical", "sexy", "silly", "technical", "wicked", "witty"],
        // Max tokens per generation.
        "maxTokens": {
            "name": 55,
            "description": 230,
            "insights": 8100,
            // If max tokens were not enough, try again with a 20% higher limit.
            "multiplier": 1.2
        },
        "insights": {
            // For the AI insights, consider activities from the past 4 weeks.
            "recentWeeks": 4
        }
    },
    "app": {
        // Application title.
        "title": "Strautomator",
        // The server will look for the files strautomator.cert and strautomator.key on the
        // app root to start a HTTPS server on port 8443. If these files are not there,
        // the server will listen on HTTP port 8080 instead.
        "port": null,
        // You can set the app URL on your settings.secret.json file or
        // via the $SMU_app_url environment variable.
        "url": "https://strautomator.com/",
        // Listen to all incoming connections by default.
        "ip": "0.0.0.0",
        // Hashtag used on social media.
        "hashtag": "#strautomator.com",
        // Express trust proxy settings.
        "trustProxy": 2,
        // URL redirections.
        "redirects": [
            {
                "from": "/calendar/upcoming",
                "to": "/map"
            }
        ]
    },
    "api": {
        // API is rate limited to 1000 requests per minute per instance by default. If you wish to disable
        // rate limiting altogether, set "rateLimit" to false.
        "rateLimit": {
            "statusCode": 429,
            "max": 1000,
            "windowMs": 60000,
            "standardHeaders": true,
            "legacyHeaders": false,
            "message": "Too many request, please try again later"
        },
        // Only accept connections coming via Cloudflare by default.
        "requireCloudflare": true
    },
    // Afiliate settings (also used for the Country Linkify module).
    "affiliates": {
        "app": {
            "homeUrl": "https://strautomator.com/billing/affiliates",
            "title": "Strautomator"
        },
        "country": {
            "cacheDuration": 900,
            "default": "us",
            "es": ["mt", "pt"],
            "de": ["at", "be", "ch", "cz", "dk", "ee", "gi", "fi", "fr", "hu", "ie", "it", "nl", "no", "pl", "se", "sk"],
            "uk": ["gb"]
        },
        "images": {
            "path": "./static/images/affiliates/"
        },
        "server": {
            "basePath": "/affiliates/",
            "url": "https://links.strautomator.com/"
        }
    },
    "announcements": {
        // Active announcements should be cached for up to 30 minutes.
        "cacheDuration": 1800
    },
    // Anthropic API options.
    "anthropic": {
        "api": {
            "version": "2023-06-01",
            "baseUrl": "https://api.anthropic.com/v1/",
            // Maximum concurrent requests per instance.
            "maxConcurrent": 2,
            // Maximum requests per minute per instance.
            "maxPerMinute": 40
        }
    },
    "axios": {
        // User agent used to emulate a browser.
        "uaBrowser": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36",
        // Start throttling requests if we reach over 90% of the extracted quota. Value in percent (0 to 100).
        "backoffThreshold": 90,
        // Back-off base delay when we're about to hit API rate limits.
        // Value set in milliseconds, will increase as we get closer to the limits.
        "backoffInterval": 500,
        // Retry axios requests after 1.1 seconds. Value set in milliseconds.
        "retryInterval": 1100,
        // Default timeout of 2.5 minutes for axios requests. Value set in milliseconds.
        "timeout": 150000
    },
    // AWIN affiliates.
    "awin": {
        "cacheDuration": 300,
        "api": {
            "baseUrl": "https://api.awin.com/"
        },
        "feeds": {
            "listUrl": "https://ui.awin.com/productdata-darwin-download/publisher/${publisherId}/${key}/1/feedList",
            "baseUrl": "https://productdata.awin.com/datafeed/download/apikey/${key}/fid/${feedId}/language/${language}/columns/${columns}/format/csv/delimiter/%7C/compression/zip/adultcontent/1/",
            "columns": "aw_deep_link,product_name,merchant_image_url,description,merchant_category,merchant_name,category_name,aw_image_url,brand_name,in_stock,product_short_description,product_type,specifications,promotional_text,display_price",
            "maxAgeDays": 30
        }
    },
    "calendar": {
        // Default activity fields to be added to event details, based on the activity type.
        // Each item is a line, and multiple fields can be added to same line separated by comma.
        "activityFields": {
            "default": ["distance,elevationGain", "speedAvg,paceAvg", "calories", "hrAvg,hrMax,wattsAvg", "totalTime", "description"],
            "ride": ["distance,elevationGain", "speedAvg", "calories", "hrAvg,hrMax,wattsAvg,wattsMax", "totalTime,movingTime", "description"],
            "run": ["distance,elevationGain", "paceAvg,speedAvg", "calories", "hrAvg,hrMax,wattsAvg", "totalTime,movingTime", "description"],
            "swim": ["distance", "speedAvg", "calories", "hrAvg,hrMax,wattsAvg", "totalTime", "description"],
            "workout": ["calories", "hrAvg,hrMax,wattsAvg", "totalTime", "description"]
        },
        // Speed up first calendar generation by shortening the date ranges and
        // limiting the number of events added to 50. Set to null or false to disable.
        "partialFirstBuild": 50,
        // Calendar base name.
        "name": "Strava",
        // Default template for the event summary.
        "eventSummary": "${name} ${icon}",
        // Default event duration in minutes (ie. for past club events).
        "eventDurationMinutes": 15,
        // A calendar will be deleted if no client requests it after 4 days.
        "maxCacheDuration": 345600,
        // Calendar events will cached if they're older than 30 days, by default.
        "minAgeForCachingDays": 30
    },
    "cookie": {
        "sessionName": "strautsession",
        // This secret should be updated via the settings.secret.json file or
        // via the $SMU_cookie_secret environment variable.
        "secret": "Strautocookie-Super-Secret"
    },
    "database": {
        // If you're hosting multiple sites or services within the same Google Project,
        // you might add a default suffix to Firestore collection names.
        "collectionSuffix": "",
        // Cache duration to keep database documents in memory for different colletions. Value set in seconds.
        "cacheDuration": null,
        // Encryption options.
        "crypto": {
            "algorithm": "aes-256-cbc",
            // List of property names that should be saved in encrypted format.
            "fields": ["accessToken", "previousAccessToken", "refreshToken", "urlToken", "password", "cryptoKey"],
            // Encryption key and IV must be set on the settings.secret.json file, or via the
            // $SMU_database_crypto_key and $SMU_database_crypto_iv environment variables.
            "key": null,
            "iv": null
        },
        // Ignore undefined properties?
        "ignoreUndefinedProperties": true,
        // Disable writing to the database? Useful while troubleshooting data from production.
        "writeDisabled": false
    },
    "faq": {
        // Download questions from the database four times a day by default. Value set in milliseconds.
        "refreshSeconds": 21600
    },
    "functions": {
        // Scheduled functions default batch size.
        "batchSize": 8
    },
    "garmin": {
        "api": {
            "baseUrl": "https://apis.garmin.com/",
            "authUrl": "https://connectapi.garmin.com/oauth-service/oauth/",
            "loginUrl": "https://connect.garmin.com/oauthConfirm",
            // Maximum concurrent requests per instance.
            "maxConcurrent": 4,
            // Maximum requests per minute per instance.
            "maxPerMinute": 120,
            // Token to be appended to the URL of Garmin webhooks, for
            // extra security. Can only include alphanumeric characters.
            // This MUST be set on the settings.secret.json file or via
            // via the SMU_garmin_api_urlToken environment variable.
            "urlToken": null
        },
        // Cache profiles and Garmin data for up to 2 minutes. Value set in seconds.
        "cacheDuration": 120,
        // Garmin data will be stored in the database for up to 10 days.
        "maxCacheDuration": 864000
    },
    "gcp": {
        // The project ID on Google Cloud must be set on the settings.secret.json file
        // or via the SMU_gcp_projectId environment variable.
        "projectId": null,
        // Default GCP location when creating resources on-the-fly.
        "location": "europe-west4",
        // If you wish the app to download settings from Google Cloud Storage on startup, please
        // specify the bucket name and filename below on your secret settings or via the
        // SMU_gcp_downloadSettings_bucket and SMU_gcp_downloadSettings_filename environment
        // variables. It's HIGHLY recommended to have the settings files encrypted there.
        "downloadSettings": {
            "bucket": null,
            "target": "/tmp/",
            "filename": "settings.secret.json"
        }
    },
    "gdpr": {
        // Users can request an archive download once every 10 days.
        "requestDays": 10
    },
    "gearwear": {
        // By default, when update distance for gear components, get activities that happened
        // 2 days ago (so users will have some time to set the correct activity gear).
        "delayDays": 2,
        // Notify users if components haven't been updated for more than 12 months.
        "idleReminderDays": 365,
        // Wait at least 10 days before sending another GearWear reminder.
        "reminderDays": 10,
        // Remind user if tracking was not reset and current usage has passed 15% of the target alert value.
        "reminderThreshold": 1.15,
        // Keep a maximum of 20 recent activity IDs per gear.
        "maxRecentActivities": 20,
        // Remove devices that did not have their battery status updated for more than 90 days by default.
        "battery": {
            "maxAgeDays": 90
        }
    },
    "gemini": {
        "api": {
            // Maximum concurrent requests per instance.
            "maxConcurrent": 2,
            // Maximum requests per minute per instance.
            "maxPerMinute": 20
        }
    },
    "genius": {
        "api": {
            "baseUrl": "https://api.genius.com/"
        },
        "url": "https://genius.com/"
    },
    "github": {
        "api": {
            "baseUrl": "https://api.github.com/",
            "repo": "strautomator/web",
            "coreRepo": "strautomator/core",
            "contactRepo": "strautomator/contact",
            "username": "igoramadas"
        }
    },
    "komoot": {
        "api": {
            // Base Komoot API URL.
            "baseUrl": "https://api.komoot.de/v007/"
        },
        // Base Komoot HTML / end user URL.
        "baseUrl": "https://www.komoot.com/",
        // Route details are cached normally for around 12 hours. Value set in seconds.
        "cacheDuration": 43200,
        // Route details are cached in the database for up to 4 days. Value set in seconds.
        "maxCacheDuration": 345600
    },
    "locationiq": {
        "baseUrl": "https://eu1.locationiq.com/v1/",
        // The token must be set via secret settings or via the SMU_locationiq_token environment variable.
        "token": null,
        // Maximum concurrent requests and requests per minute, per instance.
        "maxConcurrent": 1,
        "maxPerMinute": 100,
        "minTime": 500
    },
    "mailer": {
        // Default contact email.
        "contact": "info@strautomator.com",
        // The default "from" on sent emails should be set on settings.secret.json file
        // or via the SMU_mailer_from environment variable.
        "from": "noreply@strautomator.com",
        // Optional BCC address to be added to all sent emails.
        "bcc": null,
        // Default SMTP settings are valid for Amazon SES. You can overwrite these on
        // on your secret settings or via environment variables.
        "smtp": {
            "secure": true,
            "host": "email-smtp.us-east-1.amazonaws.com",
            "port": 465,
            "auth": {
                // User and password must be set via the settings.secret.json file
                // or using environment variables.
                "user": null,
                "pass": null
            }
        },
        // An extra SMTP server might be configured as a fallback. Use the same
        // property names defined on the "smtp" above. The fallback will only
        // be enabled if you have defined a user and password.
        "smtpFallback": {
            "secure": true,
            "host": "in-v3.mailjet.com",
            "port": 465,
            "auth": {
                "user": null,
                "pass": null
            }
        }
    },
    "maps": {
        // Geocoded results are cached down to a precision of around 1km (2 decimal digits).
        "cachePrecision": 2,
        // Cache geolocation results in memory for up to 12 hours. Value set in seconds.
        "cacheDuration": 43200,
        // Geolocation will be cached on the database for up to 10 days. Value set in seconds.
        "maxCacheDuration": 864000,
        // Circle color, will also be used as a fill color with half opacity.
        "circleColor": "0x0066CC",
        // Default marker style and color.
        "defaultStyle": "color:red",
        // Default map size in pixels.
        "defaultSize": 380,
        // Default zoom level 10 (far) to 19 (closer).
        "defaultZoom": 16,
        // The Google Maps API key must be set on settings.secret.json file or
        // via the SMU_maps_api_key environment variable.
        "api": {
            "key": null,
            // Static maps base URL.
            "baseStaticUrl": "https://maps.googleapis.com/maps/api/staticmap?"
        }
    },
    // Mistral AI.
    "mistral": {
        "api": {
            "baseUrl": "https://api.mistral.ai/v1/",
            // Maximum concurrent requests per instance.
            "maxConcurrent": 2,
            // Maximum requests per minute per instance.
            "maxPerMinute": 20
        }
    },
    "notifications": {
        // Cache notification results for up to 4 seconds.
        "cacheDuration": 4,
        // Messages will auto expire after 6 months.
        "defaultExpireDays": 180,
        // Send notifications via email if unread notifications hits a certain count.
        "emailReminderCount": 10,
        // Delete read messages after 90 days.
        "readDeleteAfterDays": 90
    },
    "oauth": {
        // Auth failure date is reset after 14 days by default.
        "reauthResetDays": 14,
        // Alert users after 3 token failures.
        "tokenFailuresAlert": 3,
        // Suspend further API requests if user reaches 10 failures on that specific API.
        "tokenFailuresDisable": 10,
        // Token exchange requests times out in 6 seconds. This applies to all
        // OAuth2 modules (Strava, PayPal, etc).
        "tokenTimeout": 6000
    },
    "openai": {
        "api": {
            "baseUrl": "https://api.openai.com/v1/",
            // Custom assistant ID.
            "assistantId": "asst_yBraLh0JhbxWiTXudiSRFjNJ",
            // Maximum concurrent requests per instance.
            "maxConcurrent": 2,
            // Maximum requests per minute per instance.
            "maxPerMinute": 120
        }
    },
    "paddle": {
        "api": {
            "environment": "production",
            // Default page size is the max of 200.
            "pageSize": 200,
            // The API key and client token must be set on the settings.secret.json file,
            // or via the SMU_paddle_api_key and SMU_paddle_api_clientToken env variables.
            "key": null,
            "clientToken": null
        },
        // The price and webhook IDs must be taken from Paddle and set on the settings.secret.json file,
        // or via the SMU_paddle_priceId and SMU_paddle_webhookId env variables.
        "priceId": null,
        "webhookId": null,
        // If you wish to restrict webhook events sent by Paddle to specific IPs, you may set them here as an array.
        "ips": null
    },
    "paypal": {
        "api": {
            "mode": "live",
            "baseUrl": "https://api.paypal.com/",
            "mBaseUrl": "https://api-m.paypal.com/",
            // Token to be appended to the URL of PayPal webhooks, for
            // extra security. Can only include alphanumeric characters.
            // This MUST be set on the settings.secret.json file or via
            // via the SMU_paypal_api_urlToken environment variable.
            "urlToken": null,
            // The PayPal API client ID and secret must be set on the settings.secret.json file,
            // or via the SMU_paypal_api_clientId and SMU_paypal_api_clientSecret env variables.
            // Please note that on development it will default the sandbox environment.
            "clientId": null,
            "clientSecret": null,
            // List of webhook event types that Strautomator should listen to. The payment events
            // are specially important to automatically manage PRO accounts.
            "webhookEvents": [
                "PAYMENT.SALE.COMPLETED",
                "PAYMENT.SALE.DENIED",
                "PAYMENT.SALE.PENDING",
                "PAYMENT.SALE.REFUNDED",
                "PAYMENT.SALE.REVERSED",
                "BILLING.SUBSCRIPTION.CREATED",
                "BILLING.SUBSCRIPTION.ACTIVATED",
                "BILLING.SUBSCRIPTION.UPDATED",
                "BILLING.SUBSCRIPTION.EXPIRED",
                "BILLING.SUBSCRIPTION.CANCELLED",
                "BILLING.SUBSCRIPTION.SUSPENDED",
                "BILLING.SUBSCRIPTION.PAYMENT.FAILED"
            ]
        },
        "billingPlan": {
            // Accept payments in USD, EUR and GBP.
            "currency": ["CHF", "EUR", "USD", "GBP"],
            // Names and descriptions used on PayPal billing plans.
            "name": "Strautomator Pro subscription",
            "productName": "Strautomator Pro account",
            "description": "Subscription to get a PRO account on Strautomator.",
            // Subscription agreements are set to start 5 minutes after they are approved.
            "startMinutes": 5
        }
    },
    "plans": {
        "free": {
            "apiConcurrency": 4,
            // Free accounts are limited to 3 recipes and 2 gearwear configuration.
            "maxRecipes": 3,
            "maxGearWear": 2,
            "maxClubs": 5,
            // Free accounts can trigger batch automations for activities up to 30 days old.
            "batchDays": 30,
            // Free accounts limited to 6 months in the past and up to 5 days in the future.
            "pastCalendarDays": 180,
            "futureCalendarDays": 5,
            // Free calendars are cached for around 12 hours.
            "calendarCacheDuration": 43200,
            // Links on 100% of processed activities on free accounts by default.
            "linksOn": 1,
            // Track personal records for which sports?
            "recordSports": ["Ride", "VirtualRide", "Run", "VirtualRun"],
            // Use AI and weather parameters on 20% of "AI generate" recipe actions.
            "generatedContent": {
                "ai": 20,
                "weather": 20
            }
        },
        "pro": {
            "apiConcurrency": 6,
            // PRO accounts are limited to 999 (virtually unlimited) recipes and gearwear configs.
            "maxRecipes": 999,
            "maxGearWear": 999,
            "maxClubs": 30,
            // PRO accounts can trigger batch automations for activities up to 5 years old.
            "batchDays": 1825,
            // PRO accounts limited to 10 years in the past and up to 1 year in the future.
            "pastCalendarDays": 3650,
            "futureCalendarDays": 365,
            // PRO calendars are cached for around 3 hours.
            "calendarCacheDuration": 10800,
            // No links (0%) on PRO accounts processed activities by default.
            "linksOn": 0,
            // Allow personal records for all sports.
            "recordSports": true,
            // Use AI and weather parameters on 99% "AI generate" recipe actions.
            "generatedContent": {
                "ai": 99,
                "weather": 99
            }
        }
    },
    "recipes": {
        // Linkback text (will have the app title appended to it).
        "linkTexts": {
            "default": "Automated with",
            "aiContent": "Powered with AI by",
            "url": "strautomator.com"
        },
        // How many times a recipe can fail before getting disabled automatically.
        "maxFailures": 10,
        // Max number of activity IDs kept on the recipe stats.
        "maxActivityIds": 500,
        // Max length for specific properties.
        "maxLength": {
            "title": 40,
            "conditionValue": 800,
            "actionValue": 1000
        },
        // Webhook timeout is set to 3 seconds by default. Value in milliseconds.
        "webhook": {
            "timeout": 3000
        }
    },
    // Navigation routes options (GPS routing, not URLs).
    "routes": {
        // Total estimated route will add 40min (in seconds) for every few hours of riding or running,
        // depending on the user's fitness level.
        "breakTime": 2400,
        // A maximum of 15 routes can be zipped for downloading.
        "zipLimit": 15
    },
    // Spotify integration. The "clientId" and "clientSecret" must be set via secret settings
    // or via the SMU_spotify_api_clientId and SMU_spotify_api_clientSecret environment variables.
    "spotify": {
        "api": {
            "baseUrl": "https://api.spotify.com/v1/",
            "authUrl": "https://accounts.spotify.com/authorize",
            "tokenUrl": "https://accounts.spotify.com/api/token",
            "scopes": "user-read-email,user-read-recently-played"
        },
        // Cache profiles and recently played tracks for up to 1 minute. Value set in seconds.
        "cacheDuration": 60,
        // Track lyrics cached for up to 30 days in the database. Value set in seconds.
        "maxCacheDuration": 2592000,
        // Include tracks that started / ended within a minute of the activity date.
        "dateBufferSeconds": 60,
        // Maximum number of tracks returned.
        "trackLimit": 50
    },
    // STANDS4 APIs. The "uid" and "tokenId" must be set via secret settings or via the
    // SMU_stands4_api_uid and SMU_stands4_api_tokenId environment variables.
    "stands4": {
        "api": {
            "baseUrl": "https://www.stands4.com/services/v2/lyrics.php"
        }
    },
    // Cloud Storage buckets, with optional TTLs (in days). If you wish to specify the bucket location,
    // please add a "location" parameter. Otherwise the default will be taken from "gcp.location".
    "storage": {
        "buckets": {
            "ai": {"name": "strautomator-ai", "ttlDays": 90},
            "cache": {"name": "strautomator-cache", "ttlDays": 30},
            "calendar": {"name": "bucket-calendar.strautomator.com", "ttlDays": 7},
            "gdpr": {"name": "bucket-gdpr.strautomator.com", "ttlDays": 2}
        },
        // Storage buckets are configured as CNAME in production.
        "cname": true
    },
    "strava": {
        // API endpoints and credentials from Strava. The "clientId" and "clientSecret" must be set via secret
        // settings or via the SMU_strava_api_clientId and SMU_strava_api_clientSecret environment variables.
        "api": {
            "baseUrl": "https://www.strava.com/api/v3/",
            "authUrl": "https://www.strava.com/oauth/authorize",
            "deauthUrl": "https://www.strava.com/oauth/deauthorize",
            "tokenUrl": "https://www.strava.com/oauth/token",
            "scopes": "read,profile:read_all,profile:write,activity:read_all,activity:write",
            // Maximum concurrent requests per instance.
            "maxConcurrent": 8,
            // Maximum requests per minute per instance.
            "maxPerMinute": 400,
            // Default page size is the max of 200.
            "pageSize": 200,
            // Token to be appended to the URL of Strava webhooks, for
            // extra security. Can only include alphanumeric characters.
            // This MUST be set on the settings.secret.json file or via
            // via the SMU_strava_api_urlToken environment variable.
            "urlToken": null,
            // Default verification token to be sent by Strava on subcriptions, MUST be set
            // via secret settings or the SMU_strava_api_verifyToken environment variable.
            "verifyToken": null,
            // Strava will be considered as having an incident going on if more than 20
            // timeouts have happened in less than 10 minutes.
            "timeoutThresholds": {
                "count": 20,
                "seconds": 600
            }
        },
        // Some Strava resources might be cached. Duration in seconds.
        "cacheDuration": {
            "activities-streams": 1209600,
            "athletes-stats": 180,
            "clubs": 7200,
            "clubs-group-events": 1800,
            "gear": 600,
            "routes": 7200,
            "power-intervals": 2419200
        },
        // Do not process club events with more than 2 years of age (past or future).
        "clubs": {
            "maxAgeDays": 730
        },
        "ftp": {
            // Estimated FTP will go down by 1% for each retroactive week of no activities.
            "idleLossPerWeek": 0.01,
            // User's FTP will be estimated based on activities from the last 10 weeks.
            "weeks": 10,
            // FTP can be updated only once every 24 hours.
            "sinceLastHours": 24,
            // FTP must have changed by at least 2% to be updated automatically.
            "saveThreshold": 0.02
        },
        "fitnessLevel": {
            // Fitness levels will be estimated based on activities from the last 12 weeks by default.
            "weeks": 12,
            // Minimum activity time (ride and run), in seconds, to consider for the fitness level estimation.
            "minRunTime": 720,
            "minRideTime": 1200
        },
        "processedActivities": {
            // Activities containing this hashtag on their names will be ignored by Strautomator.
            "ignoreHashtag": "#strautomator-ignore",
            // Processed activity details will be deleted from the database after 2 years. Value set in days.
            "maxAgeDays": 730
        },
        "processingQueue": {
            // Default delay for queued activities is 10 minutes, value set in seconds.
            "delayedSeconds": 600,
            // A single batch operation per user per 24 hours.
            "batchPerHours": 24,
            // Default batch size when processing queued activities.
            "batchSize": 60,
            // How long can activities stayed queued for processing?
            // By default 4 days, value set in seconds.
            "maxAge": 345600,
            // Retry processing queued activities up to 5 times.
            "retry": 5
        },
        "records": {
            // For "average" records, consider only the activities that have at least 20 minutes of moving time.
            "minMovingTimeAvg": 1200
        }
    },
    "users": {
        // Consider users idle (for deletion) if they are suspended for longer than 6 months or
        // haven't done any Strava activities for more than 2 years.
        "idleDays": {
            // Default value in days for data to be considered idle if not updated.
            "default": 180,
            // Users with no activities from Strava are considered idle after 2 years.
            "noActivities": 730,
            // How many days to wait before acting on pending or cancelled subscriptions.
            "subscriptions": 5
        }
    },
    // xAI API options.
    "xai": {
        "api": {
            "baseUrl": "https://api.x.ai/v1/",
            // Maximum concurrent requests per instance.
            "maxConcurrent": 2,
            // Maximum requests per minute per instance.
            "maxPerMinute": 10
        }
    },
    "wahoo": {
        "api": {
            "baseUrl": "https://api.wahooligan.com/",
            "scopes": "email user_read workouts_read offline_data",
            // Maximum concurrent requests per instance.
            "maxConcurrent": 4,
            // Maximum requests per minute per instance.
            "maxPerMinute": 60,
            // Token to be appended to the URL of Wahoo webhooks, for
            // extra security. Can only include alphanumeric characters.
            // This MUST be set on the settings.secret.json file or via
            // via the SMU_wahoo_api_urlToken environment variable.
            "urlToken": null
        },
        // Cache profiles and Wahoo data for up to 2 minutes. Value set in seconds.
        "cacheDuration": 120,
        // Wahoo data will be stored in the database for up to 10 days.
        "maxCacheDuration": 864000
    },
    // Weather settings. The rate limits set here should be enough for basic usage using free accounts,
    // but should be updated in production when used with a paid plan.
    "weather": {
        // Cache weather results for 15 minutes. Value set in seconds.
        "cacheDuration": 900,
        // Provider will temporarily stop requests if it fails more than 5 times in a row.
        "maxRepeatedErrors": 5,
        // When fetching weather, add a buffer of 30 minutes before and 60 after the target date.
        "dateSubtractMinutes": 30,
        "dateAddMinutes": 60,
        // Add N/A if a specific weather property was not returned by the provider.
        "emptyString": "N/A",
        // Set the default weather providers.
        "defaultProviders": {
            "free": ["openmeteo", "weatherapi"],
            "pro": ["openmeteo", "tomorrow"]
        },
        // Open-Meteo API settings.
        "openmeteo": {
            "baseUrl": "https://api.open-meteo.com/v1/forecast",
            "aqiBaseUrl": "https://air-quality-api.open-meteo.com/v1/air-quality",
            // Open-Meteo API rate limits.
            "rateLimit": {
                "maxConcurrent": 4,
                "perHour": 1000,
                "perDay": 5000
            },
            // The Open-Meteo API does not need a secret.
            "secret": true
        },
        // OpenWeatherMap API settings.
        "openweathermap": {
            "baseUrl": "https://api.openweathermap.org/data/3.0/onecall",
            "aqiBaseUrl": "https://api.openweathermap.org/data/2.5/air_pollution",
            // OpenWeatherMap API rate limits.
            "rateLimit": {
                "maxConcurrent": 4,
                "perHour": 200,
                "perDay": 1000
            },
            // The OpenWeatherMap API secret MUST be set via secret settings or
            // via the SMU_weather_openweathermap_secret environment variable.
            "secret": null
        },
        // Tomorrow API settings.
        "tomorrow": {
            "baseUrl": "https://api.tomorrow.io/v4/",
            // Tomorrow API rate limits.
            "rateLimit": {
                "maxConcurrent": 2,
                "perHour": 20,
                "perDay": 450
            },
            // The Tomorrow API secret MUST be set via secret settings or
            // via the SMU_tomorrow_api_secret environment variable.
            "secret": null
        },
        // Visual Crossing API settings.
        "visualcrossing": {
            "baseUrl": "https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/",
            /// Visual Crossing API rate limits.
            "rateLimit": {
                "maxConcurrent": 1,
                "perHour": 100,
                "perDay": 500
            },
            // The Visual Crossing API secret MUST be set via secret settings or
            // via the SMU_weather_visualcrossing_secret environment variable.
            "secret": null
        },
        // WeatherAPI.com settings.
        "weatherapi": {
            "baseUrl": "https://api.weatherapi.com/v1/",
            // WeatherAPI.com rate limits.
            "rateLimit": {
                "maxConcurrent": 4,
                "perHour": 1000,
                "perDay": 5000
            },
            // The WeatherAPI.com secret MUST be set via secret settings or
            // via the SMU_weather_weatherapi_secret environment variable.
            "secret": null
        }
    },
    "webhooks": {
        // Retry the webhooks setup every 30 seconds (if failed). Value in milliseconds.
        "retryInterval": 30000
    }
}
